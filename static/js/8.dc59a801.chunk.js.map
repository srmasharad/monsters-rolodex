{"version":3,"sources":["components/common/searchBar.jsx","components/common/cardList.jsx"],"names":["SearchBar","onSearchChange","className","Form","Group","FormControl","type","placeholder","onChange","MonsterCard","state","monsterData","searchField","alertMessage","handleSearchChange","e","target","value","setState","fetch","data","json","this","console","log","filterMonsters","filter","monster","title","toLowerCase","includes","length","Alert","variant","Row","map","Col","sm","key","id","Card","Img","src","alt","Body","Title","substr","Text","body","to","Component"],"mappings":"yRAaeA,EAVG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,eACjB,OACI,yBAAKC,UAAU,cACX,kBAACC,EAAA,EAAKC,MAAN,KACI,kBAACC,EAAA,EAAD,CAAaC,KAAK,OAAOC,YAAY,qBAAqBC,SAAUP,OCF9EQ,E,2MACFC,MAAQ,CACJC,YAAa,GACbC,YAAa,GACbC,cAAe,G,EAgBnBC,mBAAqB,SAACC,GAClB,IAAMH,EAAcG,EAAEC,OAAOC,MAE7B,EAAKC,SAAS,CAAEN,iB,8NAdOO,MAAM,8C,cAAnBC,E,gBACoBA,EAAKC,O,OAAzBV,E,OACPW,KAAKJ,SAAS,CAAEP,cAAaE,cAAc,I,kDAI1CU,QAAQC,IAAR,M,+IAWE,IAAD,EAC8CF,KAAKZ,MAAhDC,EADH,EACGA,YAAaC,EADhB,EACgBA,YAAaC,EAD7B,EAC6BA,aAC5BY,EAAiBd,EAAYe,QAAO,SAAAC,GAAO,OAAIA,EAAQC,MAAMC,cAAcC,SAASlB,EAAYiB,kBAEtG,OACI,oCACI,2BAAIlB,EAAYoB,OAAhB,kCACA,kBAAC,EAAD,CAAW9B,eAAgBqB,KAAKR,qBACL,IAA1BW,EAAeM,QAAiBlB,GAAgB,kBAACmB,EAAA,EAAD,CAAOC,QAAQ,UAAf,4CAGjD,kBAACC,EAAA,EAAD,KACKT,EAAeU,KAAI,SAAAR,GAAO,OACvB,kBAACS,EAAA,EAAD,CAAKC,GAAI,EAAGC,IAAKX,EAAQY,IACrB,kBAACC,EAAA,EAAD,CAAMtC,UAAU,eACZ,kBAACsC,EAAA,EAAKC,IAAN,CAAUR,QAAQ,MAAMS,IAAG,+BAA0Bf,EAAQY,GAAlC,aAAiDI,IAAG,sBAAiBhB,EAAQY,MACxG,kBAACC,EAAA,EAAKI,KAAN,KACI,kBAACJ,EAAA,EAAKK,MAAN,eAAgBlB,EAAQC,MAAMkB,OAAO,EAAG,IAAxC,QACA,kBAACN,EAAA,EAAKO,KAAN,eACQpB,EAAQqB,KAAKF,OAAO,EAAG,IAD/B,QAGA,kBAAC,IAAD,CAAMG,GAAE,oBAAetB,EAAQY,IAAMrC,UAAU,0BAA/C,yB,GA/CVgD,aA0DXzC","file":"static/js/8.dc59a801.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, FormControl } from 'react-bootstrap';\r\n\r\nconst SearchBar = ({ onSearchChange}) => {\r\n    return (\r\n        <div className=\"sticky-top\">\r\n            <Form.Group>\r\n                <FormControl type=\"text\" placeholder=\"Search monsters...\" onChange={onSearchChange} />\r\n            </Form.Group>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default SearchBar;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Row, Col, Alert } from 'react-bootstrap';\r\nimport SearchBar from './searchBar';\r\n\r\nclass MonsterCard extends Component {\r\n    state = {  \r\n        monsterData: [],\r\n        searchField: '',\r\n        alertMessage:  false\r\n    }\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const data = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n            const monsterData = await data.json();\r\n           this.setState({ monsterData, alertMessage: true });\r\n        }\r\n\r\n        catch(ex){\r\n            console.log(ex);\r\n        }\r\n        \r\n    }\r\n    \r\n    handleSearchChange = (e) => {\r\n        const searchField = e.target.value;\r\n\r\n        this.setState({ searchField })\r\n    }\r\n\r\n    render() { \r\n        const { monsterData, searchField, alertMessage } = this.state; \r\n        const filterMonsters = monsterData.filter(monster => monster.title.toLowerCase().includes(searchField.toLowerCase()));               \r\n\r\n        return (\r\n            <>  \r\n                <p>{monsterData.length} monsters are in the Database.</p>\r\n                <SearchBar onSearchChange={this.handleSearchChange} />\r\n                {filterMonsters.length === 0  && alertMessage && <Alert variant=\"danger\">\r\n                    Sorry! No such monster founds in a list.\r\n                </Alert>}\r\n                <Row>\r\n                    {filterMonsters.map(monster =>\r\n                        <Col sm={3} key={monster.id}>\r\n                            <Card className=\"monsterCard\">\r\n                                <Card.Img variant=\"top\" src={`https://robohash.org/${monster.id}?set=set2`} alt={`monster_img_${monster.id}`}/>\r\n                                <Card.Body>\r\n                                    <Card.Title>{`${monster.title.substr(0, 20)}...`}</Card.Title>\r\n                                    <Card.Text>\r\n                                        {`${monster.body.substr(0, 60)}...`}\r\n                                    </Card.Text>\r\n                                    <Link to={`/monsters/${monster.id}`} className=\"btn btn-primary btn-sm\">Read More</Link>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    )}\r\n                </Row>\r\n            </> \r\n        );\r\n    }\r\n}\r\n \r\nexport default MonsterCard;"],"sourceRoot":""}